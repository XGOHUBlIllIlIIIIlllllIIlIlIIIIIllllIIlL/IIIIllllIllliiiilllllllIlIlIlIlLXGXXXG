--lua语言编写/xgo全源码
local sound = Instance.new("Sound")sound.SoundId = "rbxassetid://9042063815"  sound.Volume = 0.5  sound.Pitch = 1  sound.Parent = game.Workspace  sound:Play()
local xxxgoui = loadstring(game:HttpGet("https://github.com/XGOHUBlIllIlIIIIlllllIIlIlIIIIIllllIIlL/xxxxgo/blob/main/xgohubUI?raw=true"))()
local Notify = xxxgoui:Notify({Title="ҲƓƠӇƲƁ- goto_O R's 2.1581版\nฅ欢迎宝宝回家ฅ ҲƓƠӇƲƁ",["Description"] = "",["Color"] = Color3.fromRGB(255, 0, 255),Content = "",["Time"] = 5,["Delay"] = 10})
local xgui = xxxgoui:Start({["Name"]="【メ】【G】【Ö】【ℍ】【ⓤ】【ß】",["Description"] = "- goto_O R's 2.1581版",["Info Color"] = Color3.fromRGB(1, 1, 1),["Logo Info"] = "rbxassetid://120611289434746",["Logo Player"] = "rbxassetid://128885038925647", ["Name Info"] = "ҲƓƠӇƲƁ 欢迎宝宝回家",["Name Player"] = "ҲƓƠ",["Info Description"] = "作者:xxxxgo 群聊:259461151",["Tab Width"] = 135,["Color"] = Color3.fromRGB(255, 0, 255),["CloseCallBack"] = function()end})
local MainTab = xgui:MakeTab("x-ฅ信息ฅ")local MusicTab = xgui:MakeTab("x-ฅ音乐天堂ฅ")local AdministratorTab = xgui:MakeTab("x-ฅ管理员ฅ")local PicturequalityTab = xgui:MakeTab("x-ฅ图像画质ฅ")local UniversalTab = xgui:MakeTab("x-ฅ通用-玩家ฅ")local PropsTab = xgui:MakeTab("x-ฅ道具FEฅ")local BlackholeTab = xgui:MakeTab("x-ฅ黑洞ฅ")local TalkTab = xgui:MakeTab("x-ฅ聊天中枢ฅ")local SelfishTab = xgui:MakeTab("x-ฅ自瞄透视ฅ")local LeisureTab = xgui:MakeTab("x-游戏类型-ฅ休闲模拟器ฅ")local SimulationbusinessTab = xgui:MakeTab("x-游戏-ฅ模拟经营ฅ")local ActionadventureTab = xgui:MakeTab("x-游戏类型-ฅ动作冒险ฅ")local ShotTab = xgui:MakeTab("x-游戏类型-ฅ竞技ฅ")local HorrorTab = xgui:MakeTab("x-游戏类型-ฅ恐怖ฅ")local AudioTab = xgui:MakeTab("x-游戏类型-ฅ音游ฅ")local AsymmetriccompetitiveTab = xgui:MakeTab("x-游戏类型-ฅ非对称竞技ฅ")local TowerDefenseTab = xgui:MakeTab("x-游戏类型-ฅ塔防ฅ")local DrivingTab = xgui:MakeTab("x-游戏类型-ฅ载具驾驶ฅ")local ParkourTab = xgui:MakeTab("x-游戏类型-ฅ跑酷obbyฅ")local RNGTab = xgui:MakeTab("x-游戏类型-ฅ创意玩法ฅ[RNG]")local XTab = xgui:MakeTab("x-[游戏]")local ScriptTab = xgui:MakeTab("x-ฅ其他脚本ฅ")
local xgo = MainTab:Section({Title="x-ฅ玩家信息ฅ",Content = "ฅ窃取你的所有信息ฅ"})
local xgo = TalkTab:Section({["Title"] = "x-ฅ聊天中枢ฅ", ["Content"] = "ฅ聊天工具ฅ"})
loadstring(game:HttpGet('https://pastebin.com/raw/E0P5BSyz'))() -- 反聊天记录器（xgo制作）
function chat(msg)if game:GetService("TextChatService").ChatVersion == Enum.ChatVersion.TextChatService then game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(msg)else game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")end end 
local method = nil
xgo:Dropdown({["Title"] = "聊天程序",["Multi"] = false,["Options"] = {"ěx́ǎḿṕĺě", "éxạmṕĺe", "ẹ̲х̲ạ̲ṃ̲р̲ḷ̲ẹ̲", "e>x>a>m>p>l>e", "￵example", "3></-\\/\\/\\p|_3"},["Default"] = {"xxxxgo"},["Place Holder Text"] = "选择一种聊天程序",["Callback"] = function(val)method = val end})
function bypasstext(text, method)
    if method == 1 then
        local function addAccents(word)
            local accents = {
                a = "ǎ",
                b = "ḃ",
                c = "ć",
                d = "d́",
                e = "ě",
                f = "ḟ",
                g = "ġ",
                h = "ḣ",
                i = "í",
                j = "j́",
                k = "ḱ",
                l = "ĺ",
                m = "ḿ",
                n = "n̋",
                o = "ō",
                p = "ṕ",
                q = "q́",
                r = "ŕ",
                s = "ś",
                t = "t̋",
                u = "ū",
                v = "v̇",
                w = "ẃ",
                x = "x́",
                y = "ý",
                z = "ź",
                A = "Ǎ",
                B = "Ḃ",
                C = "Ć",
                D = "D́",
                E = "Ě",
                F = "Ḟ",
                G = "Ġ",
                H = "Ḣ",
                I = "Í",
                J = "J́",
                K = "Ḱ",
                L = "Ĺ",
                M = "Ḿ",
                N = "N̋",
                O = "Ō",
                P = "Ṕ",
                Q = "Q́",
                R = "Ŕ",
                S = "Ś",
                T = "T̋",
                U = "Ū",
                V = "V̇",
                W = "Ẃ",
                X = "X́",
                Y = "Ý",
                Z = "Ź"
            }

            local bypassedWord = ""
            for i = 1, #word do
                local letter = word:sub(i, i)
                if accents[letter] then
                    bypassedWord = bypassedWord .. accents[letter]
                else
                    bypassedWord = bypassedWord .. letter
                end
            end

            return bypassedWord
        end

        local function bypassString(input)
            local words = {}
            for word in string.gmatch(input, "%S+") do
                table.insert(words, addAccents(word))
            end
            return table.concat(words, " ")
        end

        return bypassString(text)
    elseif method == 2 then
        local function addAccents2(word)
            local accents2 = {
                a = "ạ",
                b = "ḃ",
                c = "c",
                d = "d́",
                e = "e",
                f = "ḟ",
                g = "ġ",
                h = "ḣ",
                i = "i",
                j = "j́",
                k = "ḳ",
                l = "ĺ",
                m = "m",
                n = "n̋",
                o = "o",
                p = "ṕ",
                q = "q́",
                r = "ŕ",
                s = "ṣ",
                t = "t",
                u = "ụ",
                v = "v̇",
                w = "ẃ",
                x = "x́",
                y = "y",
                z = "z",
                A = "Ạ",
                B = "Ḃ",
                C = "C",
                D = "D́",
                E = "E",
                F = "Ḟ",
                G = "Ġ",
                H = "Ḣ",
                I = "I",
                J = "J́",
                K = "Ḱ",
                L = "Ĺ",
                M = "M",
                N = "N",
                O = "O",
                P = "Ṕ",
                Q = "Q́",
                R = "Ŕ",
                S = "Ṣ",
                T = "T",
                U = "Ụ",
                V = "V̇",
                W = "Ẃ",
                X = "X́",
                Y = "Y",
                Z = "Z"
            }

            local bypassedWord = ""
            for i = 1, #word do
                local letter = word:sub(i, i)
                if accents2[letter] then
                    bypassedWord = bypassedWord .. accents2[letter]
                else
                    bypassedWord = bypassedWord .. letter
                end
            end

            return bypassedWord
        end

        local function bypassString(input)
            local words = {}
            for word in string.gmatch(input, "%S+") do
                table.insert(words, addAccents2(word))
            end
            return table.concat(words, " ")
        end

        return bypassString(text)
    elseif method == 3 then
        local function addAccents3(word)
            local accents3 = {
                a = "ạ̲",
                b = "ḅ̲",
                c = "с̲",
                d = "ḍ̲",
                e = "ẹ̲",
                f = "f̲",
                g = "ɡ̲",
                h = "ḥ̲",
                i = "ị̲",
                j = "ј̲",
                k = "ḳ̲",
                l = "ḷ̲",
                m = "ṃ̲",
                n = "ṇ̲",
                o = "ọ̲",
                p = "р̲",
                q = "q̲",
                r = "ṛ̲",
                s = "ṣ̲",
                t = "ṭ̲",
                u = "ụ̲",
                v = "ṿ̲",
                w = "ẉ̲",
                x = "х̲",
                y = "ỵ̲",
                z = "ẓ̲",
                A = "Ạ̲",
                B = "Ḅ̲",
                C = "С̲",
                D = "Ḍ̲",
                E = "Ẹ̲",
                F = "F̲",
                G = "Ɡ̲",
                H = "Ḥ̲",
                I = "Ị̲",
                J = "Ј̲",
                K = "Ḳ̲",
                L = "Ḷ̲",
                M = "Ṃ̲",
                N = "Ṇ̲",
                O = "Ọ̲",
                P = "Р̲",
                Q = "Q̲",
                R = "Ṛ̲",
                S = "Ṣ̲",
                T = "Ṭ̲",
                U = "Ụ̲",
                V = "Ṿ̲",
                W = "Ẉ̲",
                X = "Х̲",
                Y = "Ỵ̲",
                Z = "Ẓ̲"
            }

            local bypassedWord = ""
            for i = 1, #word do
                local letter = word:sub(i, i)
                if accents3[letter] then
                    bypassedWord = bypassedWord .. accents3[letter]
                else
                    bypassedWord = bypassedWord .. letter
                end
            end

            return bypassedWord
        end

        local function bypassString(input)
            local words = {}
            for word in string.gmatch(input, "%S+") do
                table.insert(words, addAccents3(word))
            end
            return table.concat(words, " ")
        end

        return bypassString(text)
    elseif method == 4 then
        local function modifyText(input)
            local modifiedText = ""
            for i = 1, #input do
                modifiedText = modifiedText .. string.sub(input, i, i) .. ">"
            end

            return modifiedText
        end

        return modifyText(text)
    elseif method == 5 then
        local function addAccents5(word)
            local accents5 = {
                a = "a",
                b = "b￵￵",
                c = "c￵￵",
                d = "d",
                e = "￵￵e",
                f = "￵￵󠀕f￵￵",
                g = "g",
                h = "h￵￵",
                i = "￵￵i",
                j = "￵￵j￵￵",
                k = "k",
                l = "l￵￵",
                m = "m",
                n = "n",
                o = "o￵￵",
                p = "p",
                q = "q￵￵",
                r = "￵￵r￵￵",
                s = "￵￵s",
                t = "￵￵t￵￵",
                u = "u",
                v = "v",
                w = "w",
                x = "x",
                y = "y",
                z = "￵￵z￵￵󠀕",
                A = "A￵￵󠀕",
                B = "B",
                C = "C",
                D = "￵￵D",
                E = "￵￵E￵￵󠀕",
                F = "F￵￵",
                G = "￵￵G",
                H = "H",
                I = "￵￵I",
                J = "￵￵J",
                K = "K",
                L = "￵￵L",
                M = "M￵￵",
                N = "N￵￵",
                O = "O",
                P = "P￵￵",
                Q = "Q",
                R = "￵￵R",
                S = "S",
                T = "T",
                U = "￵￵U",
                V = "V",
                W = "W￵￵",
                X = "￵￵X",
                Y = "￵￵Y",
                Z = "Z￵￵󠀕"
            }

            local bypassedWord = ""
            for i = 1, #word do
                local letter = word:sub(i, i)
                if accents5[letter] then
                    bypassedWord = bypassedWord .. accents5[letter]
                else
                    bypassedWord = bypassedWord .. letter
                end
            end

            return bypassedWord
        end

        local function bypassString(input)
            local words = {}
            for word in string.gmatch(input, "%S+") do
                table.insert(words, addAccents5(word))
            end
            return table.concat(words, "")
        end

        return bypassString(text)
    elseif method == 6 then
        local function addAccents6(word)
            local accents6 = {
                a = "/-\\",
                b = "L3",
                c = "C",
                d = "CL",
                e = "3",
                f = "F",
                g = "G",
                h = "|-|",
                i = "L",
                j = "J",
                k = "L<",
                l = "|_",
                m = "/\\/\\",
                n = "/\\/",
                o = "0",
                p = "P",
                q = "Q",
                r = "R",
                s = "$",
                t = "T",
                u = "|_|",
                v = "\\/",
                w = "\\/\\/",
                x = "><",
                y = "Y",
                z = "Z"
            }

            local bypassedWord = ""
            for i = 1, #word do
                local letter = word:sub(i, i):lower()
                if accents6[letter] then
                    bypassedWord = bypassedWord .. accents6[letter]
                else
                    bypassedWord = bypassedWord .. letter
                end
            end

            return bypassedWord
        end

        local function bypassString(input)
            local words = {}
            for word in string.gmatch(input, "%S+") do
                table.insert(words, addAccents6(word))
            end
            return table.concat(words, " ")
        end

        return bypassString(text)
    end
end
xgo:TextInput({["Title"]="聊天",["Content"] = "",["Place Holder Text"] = "话语",["Clear Text On Focus"] = true,["Callback"] = function(val)
        if val ~= "" then
            if method == "ěx́ǎḿṕĺě" then
                chat(bypasstext(val, 1))
            elseif method == "éxạmṕĺe" then
                chat(bypasstext(val, 2))
            elseif method == "ẹ̲х̲ạ̲ṃ̲р̲ḷ̲ẹ̲" then
                chat(bypasstext(val, 3))
            elseif method == "e>x>a>m>p>l>e" then
                chat(bypasstext(val, 4))
            elseif method == "￵example" then
                chat(bypasstext(val, 5))
            elseif method == "3></-\\/\\/\\p|_3" then
                chat(bypasstext(val, 6))
            else
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "操作错误";   Text = "看起来您没有选择任何方法！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
             end
            else
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "操作错误";   Text = "看起来您没有输入任何文本！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
             end 
            end})
local function showNotificationIfEmpty()if spamMessage == "" then local Notify = xxxgoui:Notify({Title = "xgo Hub",	["Description"] = "- goto_O R's 2.1581版",["Color"] = Color3.fromRGB(255, 0, 255),Content = "你好像还没有说话吧",["Time"] = 9,["Delay"] = 10})end end
local function checkAndSendSpam()if spaming and spamMessage ~= "" then repeat wait(spamInterval)chat(spamMessage) until not spaming end end
local function toggleSpamming(val)if val then showNotificationIfEmpty() checkAndSendSpam() else spaming = false end end
xgo:TextInput({["Title"]="填写你想说的话",["Content"] = "点击下面自动发送即可开始",["Place Holder Text"] = "话语",["Clear Text On Focus"] = true,["Callback"] = function(val)spamMessage = val toggleSpamming(spaming)end})
xgo:Slider({["Title"]="时间间隔",["Content"]="",["Min"] = 0,["Max"] = 100,["Increment"] = 1,["Default"] = 1,["ValueName"] = "seconds",["Callback"] = function(val)spamInterval = val toggleSpamming(spaming)end})
xgo:Toggle({["Title"]="自动发送",["Content"]="选好了再发",["Default"] = false,["Callback"] = function(val)spaming = val toggleSpamming(spaming)end})
xgo:Button({Title="修复过滤器",Content ="",Callback = function() chat("abcdefg()!")end})
xgo:Toggle({
    ["Title"]="自动绕过",
    ["Content"]="",["Default"] = false,["Callback"] = function(val)
        autobypass = val
        if val == true then
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "自动绕过";   Text = "自动绕过已启用！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
        else
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "自动绕过";   Text = "自动绕过已禁用！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()            
        end
        textBox.FocusLost:Connect(function(enter)
            if enter and autobypass then
                if textBox.Text ~= "" then
                    if method == "ěx́ǎḿṕĺě" then
                        chat(bypasstext(textBox.Text, 1))
                        textBox.Text = ""
                    elseif method == "éxạmṕĺe" then
                        chat(bypasstext(textBox.Text, 2))
                        textBox.Text = ""
                    elseif method == "ẹ̲х̲ạ̲ṃ̲р̲ḷ̲ẹ̲" then
                        chat(bypasstext(textBox.Text, 3))
                        textBox.Text = ""
                    elseif method == "e>x>a>m>p>l>e" then
                        chat(bypasstext(textBox.Text, 4))
                        textBox.Text = ""
                    elseif method == "￵example" then
                        chat(bypasstext(textBox.Text, 5))
                        textBox.Text = ""
                    elseif method == "3></-\\/\\/\\p|_3" then
                        chat(bypasstext(textBox.Text, 6))
                        textBox.Text = ""
                    else
                        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "错误";   Text = "看起来您没有选择一个方法！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
                    end
                end
            end
        end)
    end
})
local logging = false
local webhook = ""
function sendToWebhook(msg, username)
    local data = {
        content = msg,
        username = username
    }
    local requestData = {
        Url = webhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
        },
        Body = game:GetService("HttpService"):JSONEncode(data)
    }
    request(requestData)
end
xgo:TextInput({
     ["Title"]="Webhook",
     ["Content"] = "",
     ["Place Holder Text"] = "",
     ["Clear Text On Focus"] = true,
     ["Callback"] = function(val)
        webhook = val
    end
})
xgo:Toggle({
    ["Title"]="日志记录",
    ["Content"]="",
    ["Default"] = false,
    ["Callback"] = function(val)
        if webhook == "" then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "错误";   Text = "看起来您没有输入任何webhook URL！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
            return
        else
            logging = val  -- 更新日志记录的状态
            if val == true then
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "开始日志记录";   Text = "已开始在指定的webhook记录消息！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
            else
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "停止日志记录";   Text = "已停止在指定的webhook记录消息！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
            end
        end
    end
})

local spamMessage = ""
local spamInterval = 1
local spaming = false
xgo:TextInput({
    ["Title"]="消息内容",
    ["Content"] = "",
    ["Place Holder Text"] = "",
    ["Clear Text On Focus"] = false,
    ["Callback"] = function(val)
        spamMessage = val  -- 更新垃圾信息内容
    end
})
xgo:TextInput({
    ["Title"]="发送间隔",
    ["Content"] = "",
    ["Place Holder Text"] = "1~100",
    ["Clear Text On Focus"] = false,
    ["Callback"] = function(val)
        spamInterval = val  -- 更新垃圾信息发送间隔
    end
})
xgo:Toggle({
    ["Title"]="垃圾信息",
    ["Content"]="",
    ["Default"] = false,
    ["Callback"] = function(val)
        if spamMessage == "" then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "错误";   Text = "看起来您没有输入任何文本！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
        else
            spaming = val  -- 更新垃圾信息发送的状态

            if spaming then
                repeat wait(spamInterval)  -- 如果开关被打开，则每隔spamInterval秒发送一次垃圾信息
                    chat(spamMessage)
                until spaming == false
            end
        end
    end
})
xgo:Button({
    Title="长消息",
    Content ="",
    Callback = function()
        chat("".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. " ".. "\u{000D}" .. "")
    end
})
function getServers()
    local request = request({  -- 发起网络请求获取服务器列表
        Url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100",
        Method = "GET",
    })
    -- 这里应该处理请求的结果，例如解析服务器数据并显示在serversTab中
end
    if request.StatusCode == 200 then
        local serverData = game:GetService("HttpService"):JSONDecode(request.Body)
        local serverList = {}

        for _, server in pairs(serverData.data) do
            local serverInfo = {
                serverId = server.id or "N/A",
                players = server.playing or 0,
                maxPlayers = server.maxPlayers or 0,
                ping = server.ping or "N/A",
            }
            table.insert(serverList, serverInfo)
        end

        return serverList
    else
        return nil
    end
end

function refreshServers()
    local servers = getServers() -- 获取服务器列表
if servers then
    for _, server in pairs(servers) do
        serversTab:AddButton({ -- 为每个服务器添加一个按钮
            Name = "玩家数: " .. server.players .. "/" .. server.maxPlayers .. "\n延迟: " .. server.ping,
            Callback = function() -- 点击按钮时执行的函数
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, server.serverId, game.Players.LocalPlayer) -- 传送到服务器
            end
        })
    end
end
xgo:Button({
    Title="刷新",
    Content ="",
    Callback = function()
        refreshServers() -- 调用刷新服务器列表的函数
    end
end)
end
xgo:Button({
    Title="加载服务器",
    Content ="",
    Callback = function()
        refreshServers() -- 调用刷新服务器列表的函数
    end
end)
local apiKey = ""
local isChatbotEnabled = false
local responseDistance = 5
local botTemperature = 1
local botModel = "llama3-8b-8192"
local personality = "Default"
local blacklist = {}

function isBlacklisted(name)
    for _, blacklisted in pairs(blacklist) do
        if name == blacklisted then
            return true
        end
    end

    return false
end
function askChatbot(msg, plrname)
    -- 构建请求数据
local requestData = {
    model = botModel,  -- 模型名称
    temperature = botTemperature,  -- 响应的随机性温度
    messages = {
        {
            role = "system",  -- 系统角色
            content = "回答时请遵守Roblox聊天过滤器，并且回答不超过200个字符。你的性格是：" .. personality
        },
        {
            role = "user",  -- 用户角色
            content = "我的名字是 " .. plrname
        },
        {
            role = "user",  -- 用户角色
            content = msg  -- 用户的消息
        }
    }
}
-- 发送请求到API
local response = request({
    Url = "https://api.groq.com/openai/v1/chat/completions",
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json",
        ["Authorization"] = "Bearer " .. apiKey  -- API密钥
    },
    Body = game:GetService("HttpService"):JSONEncode(requestData)  -- 请求体
})
-- 检查响应内容是否超过字符限制
if #game:GetService("HttpService"):JSONDecode(response.Body).choices[1].message.content >= 200 then
    print("响应内容已达到字符限制！")
else
    return game:GetService("HttpService"):JSONDecode(response.Body).choices[1].message.content
end
-- 在聊天机器人标签页中添加文本框，用于输入Groq API密钥
botTab:AddTextbox({
    Name = "Groq API密钥",
    TextDisappear = false,
    Callback = function(val)
        apiKey = val  -- 回调函数，更新API密钥
    end
})
-- 添加滑块控件，用于设置响应距离
xgo:TextInput({
    ["Title"]="响应距离",
    ["Content"] = "",
    ["Place Holder Text"] = "1~100",
    ["Clear Text On Focus"] = false,
    ["Callback"] = function(val)
        responseDistance = val  -- 回调函数，更新响应距离
    end
})
-- 添加下拉菜单，用于选择模型
xgo:Dropdown({
    ["Title"] = "模型",
    ["Multi"] = false,
    ["Options"] = {"gemma2-9b-it", "gemma-7b-it", "llama3-groq-70b-8192-tool-use-preview", "llama3-groq-8b-8192-tool-use-preview", "llama-3.1-70b-versatile", "llama-3.1-8b-instant", "llama-3.2-11b-vision-preview", "llama-3.2-90b-vision-preview", "llama3-70b-8192", "llama3-8b-8192"},
    ["Default"] = botModel,
    ["Place Holder Text"] = "选择模型",
    ["Callback"] = function(val)
        botModel = val  -- 回调函数，更新模型
    end
})
-- 添加下拉菜单，用于选择性
xgo:Dropdown({
    ["Title"] = "性格",
    ["Multi"] = false,
    ["Options"] = {"默认", "攻击性", "快乐", "犯罪", "印度骗子", "书呆子", "讽刺", "愚蠢"},
    ["Default"] = personality,
    ["Place Holder Text"] = "选择性格",
    ["Callback"] = function(val)
        personality = val  -- 回调函数，更新性格
    end
})
-- 添加文本框，用于自定义性格
xgo:TextInput({
    ["Title"]="自定义性格",
    ["Content"] = "",
    ["Place Holder Text"] = "",
    ["Clear Text On Focus"] = false,
    ["Callback"] = function(val)
        personality = val  -- 回调函数，更新自定义性格
    end
})
-- 添加文本框，用于输入聊天提示
xgo:TextInput({
    ["Title"]="提示",
    ["Content"] = "",
    ["Place Holder Text"] = "",
    ["Clear Text On Focus"] = true,
    ["Callback"] = function(val)
        OrionLib:MakeNotification({
            Name = "聊天机器人的回复",
            Content = askChatbot(val, game.Players.LocalPlayer.Name),
            Image = "rbxassetid://4483345998",
            Time = 15
        })
    end
})
-- 添加滑块控件，用于设置温度
xgo:Slider({
    ["Title"]="温度",
    ["Content"]="",
    ["Min"] = 1,
    ["Max"] = 2,
    ["Increment"] = 0.01,
    ["Default"] = botTemperature,
    ["ValueName"] = "",
    ["Callback"] = function(val)
        botTemperature = val  -- 回调函数，更新温度
    end
})
-- 添加文本框，用于黑名单玩家
xgo:TextInput({
    ["Title"]="黑名单",
    ["Content"] = "",
    ["Place Holder Text"] = "",
    ["Clear Text On Focus"] = true,
    ["Callback"] = function(val)
        if game.Players:FindFirstChild(val) then
            table.insert(blacklist, val)
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "黑名单";   Text = "玩家已被加入黑名单！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
        end
    end
})
-- 添加文本框，用于白名单玩家
xgo:TextInput({
    ["Title"]="白名单",
    ["Content"] = "",
    ["Place Holder Text"] = "",
    ["Clear Text On Focus"] = true,
    ["Callback"] = function(val)
        for i, name in pairs(blacklist) do
            if name == val then
                table.remove(blacklist, i)
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = "白名单";   Text = "玩家已被加入白名单！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867 local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
            end
        end
    end
})
-- 添加开关，用于启用或禁用聊天机器人
xgo:Toggle({
    ["Title"]="启用",
    ["Content"]="",
    ["Default"] = false,
    ["Callback"] = function(val)
        isChatbotEnabled = val
        if val == true then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Ai 聊天机器人";   Text = "聊天机器人已启用！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
        elseif val == false then
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Ai 聊天机器人";   Text = "聊天机器人已禁用！";  Icon = "rbxthumb://type=Asset&id=120611289434746&w=150&h=150"}) Duration = 1.5; local audioId = 3398620867  local sound = Instance.new("Sound")  sound.SoundId = "rbxassetid://" .. audioId  sound.Volume = 3  sound.Pitch = 3   sound.Parent = game.Workspace  sound:Play()
        end
    end
})
for _, player in pairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
        if isChatbotEnabled and distance <= responseDistance and player.Name ~= game.Players.LocalPlayer.Name and not isBlacklisted(player.Name) then
            chat(askChatbot(message, player.Name))
        end

        if logging then
            sendToWebhook("```" .. message .. "```", player.Name)
        end
    end)
end

game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
        if isChatbotEnabled and distance <= responseDistance and player.Name ~= game.Players.LocalPlayer.Name and not isBlacklisted(player.Name) then
            chat(askChatbot(message, player.Name))
        end

        if logging then
            sendToWebhook("```" .. message .. "```", player.Name)
        end
    end)
end)
xgo:Button({Title="聊天记录",Content ="",Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/bnQY7zVJ"))()end})
xgo:Button({Title="查玩家ip地址 聊天发送",Content ="只能吓唬人 因为是随机数字",Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/BingusWR/FakeRobloxIPGrabber/refs/heads/main/FERobloxIpGrabberScrip"))()end})
